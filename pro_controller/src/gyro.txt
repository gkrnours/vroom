#include <stdint.h>
#include <Wire.h>

#define GYRO (0x68)

struct gyro {
    uint16_t x;
    uint16_t y;
    uint16_t z;
};

void        initGyro();
struct gyro readGyro();
uint8_t     readRegister(uint8_t address, uint8_t reg);
void        writeRegister(uint8_t address, uint8_t reg, uint8_t val);

void initGyro ()
{
    writeRegister(GYRO, 0x3E, 0x00);
    writeRegister(GYRO, 0x15, 0x07);
    writeRegister(GYRO, 0x16, 0x1E);
    writeRegister(GYRO, 0x17, 0x00);
}

struct gyro readGyro ()
{
    uint8_t lo, hi;
    struct gyro gyro;

    Wire.beginTransmission(GYRO);
    Wire.write(0x1F);
    Wire.endTransmission();
    Wire.requestFrom(GYRO, (uint8_t)8);

    while (Wire.available() < 8);
    Wire.read(); Wire.read();
    hi = Wire.read();
    lo = Wire.read();
    gyro.x = (((lo << 8) | hi) + 120) / 14.375;
    hi = Wire.read();
    lo = Wire.read();
    gyro.y = (((lo << 8) | hi) + 20) / 14.375;
    hi = Wire.read();
    lo = Wire.read();
    gyro.z = (((lo << 8) | hi) + 93) / 14.375;
    return gyro;
}

uint8_t readRegister (uint8_t address, uint8_t reg)
{
    Wire.beginTransmission(address);
    Wire.write(reg);
    Wire.endTransmission();
    Wire.requestFrom(address, (uint8_t)1);
    return Wire.read();
}
void writeRegister (uint8_t address, uint8_t reg, uint8_t val)
{
    Wire.beginTransmission(address);
    Wire.write(reg);
    Wire.write(val);
    Wire.endTransmission();
}
